# Uncomment next line and run `zprof` to profile zsh startup
# zmodload zsh/zprof

### Brew completions (https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh)
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi
### end Brew completions

# Path to your oh-my-zsh installation.
export ZSH="/Users/eduard/.oh-my-zsh"

ZSH_THEME="agnoster"

# _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

### nvm
export NVM_DIR=~/.nvm
export NVM_LAZY=1
### end nvm

plugins=(adb ansible autojump brew command-not-found cp docker docker-compose extract genpass git git-extras git-flow gpg-agent gradle lol macos mvn nvm ripgrep sudo timer yarn)

RPROMPT='$(jenv_prompt_info)'" "'$(rbenv_prompt_info)'"$RPROMPT"

source $ZSH/oh-my-zsh.sh

DEFAULT_USER=eduard
prompt_context(){}

### jenv
function loadjenv() {
# 	export PATH="$HOME/.jenv/bin:$PATH"
#     eval "$(jenv init -)"
    source $ZSH/plugins/jenv/jenv.plugin.zsh
}
### end jenv

### jdk version
jdk() {
        version=$1
        export JAVA_HOME=$(/usr/libexec/java_home -v"$version");
        java -version
 }
 ###

### rbenv
function loadrbenv() {
    source $ZSH/plugins/rbenv/rbenv.plugin.zsh
}
### end rbenv

### pyenv
function loadpyenv() {
	if command -v pyenv 1>/dev/null 2>&1; then
	  eval "$(pyenv init -)"
	fi
}
### end pyenv

### kubectl
function loadkubectlcompletion() {
	if (( $+commands[kubectl] )); then
	    __KUBECTL_COMPLETION_FILE="${ZSH_CACHE_DIR}/kubectl_completion"

	    if [[ ! -f $__KUBECTL_COMPLETION_FILE || ! -s $__KUBECTL_COMPLETION_FILE ]]; then
	        kubectl completion zsh >! $__KUBECTL_COMPLETION_FILE
	    fi

	    [[ -f $__KUBECTL_COMPLETION_FILE ]] && source $__KUBECTL_COMPLETION_FILE

	    unset __KUBECTL_COMPLETION_FILE
	fi
}
### end kubectl

alias thermlog="pmset -g thermlog"

alias 'rm!'='env rm'
alias 'rm'='trash -F'

alias 'dcp'='docker-compose pause'
alias 'dcu'='docker-compose unpause'

alias 'gitsc'='git switch --create'

bindkey -e
bindkey '[C' forward-word
bindkey '[D' backward-word
bindkey "\e\eOD" backward-word 
bindkey "\e\eOC" forward-word


export HISTFILESIZE=100000000
export HISTSIZE=1000000

export ANDROID_HOME=/Users/eduard/Library/Android/sdk
export ANDROID_SDK=$ANDROID_HOME

export PATH=$PATH:$ANDROID_HOME/platform-tools:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/tools/proguard/bin


function mkd() {
  mkdir -p $1 && cd $_
}

function set-studio-jdk() {
# call like: $ set-studio-jdk "/Applications/Android Studio.app"
    export JAVA_HOME=$1/Contents/jre/jdk/Contents/home/
}

function screenshot-ocr() {
	screencapture -i /tmp/tesseract.png
	tesseract /tmp/tesseract.png stdout | tr -d \\f | pbcopy
}

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh
# end autojump

# zsh-autosuggestions
source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# end zsh-autosuggestions

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# end fzf

# git-extras
source /usr/local/opt/git-extras/share/git-extras/git-extras-completion.zsh
# end git-extras

# zsh-syntax-highlighting
source /usr/local/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
#end zsh-syntax-highlighting

# 1Password CLI
eval "$(op completion zsh)"; compdef _op op
# end 1Password CLI

### GCloud 
source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
### end GCloud 

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

export GPG_TTY=$(tty)

